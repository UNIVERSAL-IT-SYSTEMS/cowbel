var width = 10;
var height = 10;

/* Nasty hack to set the size of an array. */
var buffera = [[0]]; buffera.resize(height, [0]);
var bufferb = [[0]]; bufferb.resize(height, [0]);
var front = buffera;
var back = bufferb;

function print(s: string)
{
	s.print();
}

function wipe_buffers()
{
	for y = 0, height
	{
		var rowa = [0]; rowa.resize(width, 0);
		buffera.set(y, rowa);
		var rowb = [0]; rowb.resize(width, 0);
		bufferb.set(y, rowb);

		for x = 0, width		
		{
			rowa.set(x, 0);
			rowb.set(x, 0);
		}
	}
}

function populate_front()
{
	front.get(2).set(4, 1);
	front.get(3).set(4, 1);
	front.get(4).set(4, 1);
	front.get(4).set(3, 1);
	front.get(3).set(2, 1);
}

function draw_front()
{
	for y = 0, height
	{
		var row = front.get(y);
		var s = "";

		for x = 0, width		
		{
			var cell = row.get(x);
			if (cell == 0)
				s = s + ".";
			else
				s = s + "*";
		}
		print(s);
	}
}

function do_cell(x: integer, y: integer)
{
	var s = 
		front.get(y-1).get(x-1) +
		front.get(y-1).get(x  ) +
		front.get(y-1).get(x+1) +
		front.get(y  ).get(x-1) +
		front.get(y  ).get(x+1) +
		front.get(y+1).get(x-1) +
		front.get(y+1).get(x  ) +
		front.get(y+1).get(x+1);
		
	var old = front.get(y).get(x);
	
	if (s == 2)
	{
		var v = front.get(y).get(x);
		back.get(y).set(x, v);
	}
	else if (s == 3)
		back.get(y).set(x, 1);
	else
		back.get(y).set(x, 0);
}

function process()
{
	var maxw = width - 1;
	var maxh = height - 1;

	for y = 1, maxh	
	{
		for x = 1, maxw
			do_cell(x, y);
	}
}
	 
function run()
{
	print("Initialising. (Be patient...)");
	wipe_buffers();
	populate_front();

	var b = true;
	for generations = 0, 10
	{
		print("");
		print("Frame " + generations.toString());
		process();
		
		if (b)
		{
			front = bufferb;
			back = buffera;
		}
		else
		{
			front = buffera;
			back = bufferb;
		}
		b = !b;
		
		draw_front();
	}
}

run();
